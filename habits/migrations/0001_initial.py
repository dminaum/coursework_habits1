# Generated by Django 5.2.6 on 2025-09-20 13:05

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Habit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("place", models.CharField(max_length=255)),
                ("time", models.TimeField()),
                ("action", models.CharField(max_length=255)),
                ("is_pleasant", models.BooleanField(default=False)),
                (
                    "periodicity_days",
                    models.PositiveSmallIntegerField(
                        default=1,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(7),
                        ],
                    ),
                ),
                ("reward", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "duration_seconds",
                    models.PositiveSmallIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(120),
                        ]
                    ),
                ),
                ("is_public", models.BooleanField(default=False)),
                ("last_performed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "related_habit",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="habits.habit",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="habits",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="HabitLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("performed_at", models.DateTimeField(auto_now_add=True)),
                (
                    "habit",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="logs",
                        to="habits.habit",
                    ),
                ),
            ],
        ),
        migrations.AddConstraint(
            model_name="habit",
            constraint=models.CheckConstraint(
                condition=models.Q(
                    ("duration_seconds__gte", 1), ("duration_seconds__lte", 120)
                ),
                name="habit_duration_1_120",
            ),
        ),
        migrations.AddConstraint(
            model_name="habit",
            constraint=models.CheckConstraint(
                condition=models.Q(
                    ("periodicity_days__gte", 1), ("periodicity_days__lte", 7)
                ),
                name="habit_periodicity_1_7",
            ),
        ),
        migrations.AddConstraint(
            model_name="habit",
            constraint=models.CheckConstraint(
                condition=models.Q(
                    ("reward__isnull", False),
                    models.Q(("reward", ""), _negated=True),
                    ("related_habit__isnull", False),
                    _negated=True,
                ),
                name="habit_no_reward_and_related",
            ),
        ),
        migrations.AddConstraint(
            model_name="habit",
            constraint=models.CheckConstraint(
                condition=models.Q(
                    ("is_pleasant", False),
                    models.Q(
                        models.Q(
                            ("reward__isnull", True), ("reward", ""), _connector="OR"
                        ),
                        ("related_habit__isnull", True),
                    ),
                    _connector="OR",
                ),
                name="habit_pleasant_has_no_reward_or_related",
            ),
        ),
    ]
